{"changed":true,"filter":false,"title":"projetos_controller.rb","tooltip":"/app/controllers/projetos_controller.rb","value":"class ProjetosController < ApplicationController\n  before_action :set_projeto, only: [:show, :edit, :update, :destroy]\n\n  # GET /projetos\n  # GET /projetos.json\n  def index\n    @projetos = Projeto.all\n  end\n\n  # GET /projetos/1\n  # GET /projetos/1.json\n  def show\n  end\n\n  # GET /projetos/new\n  def new\n    @projeto = Projeto.new\n  end\n\n  # GET /projetos/1/edit\n  def edit\n  end\n\n  # POST /projetos\n  # POST /projetos.json\n  def create\n    @projeto = Projeto.new(projeto_params)\n\n    respond_to do |format|\n      if @projeto.save\n        format.html { redirect_to @projeto, notice: 'Projeto was successfully created.' }\n        format.json { render :show, status: :created, location: @projeto }\n      else\n        format.html { render :new }\n        format.json { render json: @projeto.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PATCH/PUT /projetos/1\n  # PATCH/PUT /projetos/1.json\n  def update\n    respond_to do |format|\n      if @projeto.update(projeto_params)\n        format.html { redirect_to @projeto, notice: 'Projeto was successfully updated.' }\n        format.json { render :show, status: :ok, location: @projeto }\n      else\n        format.html { render :edit }\n        format.json { render json: @projeto.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /projetos/1\n  # DELETE /projetos/1.json\n  def destroy\n    @projeto.destroy\n    \n    respond_to do |format|\n      format.html { redirect_to projetos_url, notice: 'Projeto was successfully destroyed.' }\n      format.json { head :no_content }\n      \n    end\n  end\n\n  private\n    # Use callbacks to share common setup or constraints between actions.\n    def set_projeto\n      @projeto = Projeto.find(params[:id])\n    end\n\n    # Never trust parameters from the scary internet, only allow the white list through.\n    def projeto_params\n      params.require(:projeto).permit(:user_id, :titulo, :descricao, :previsao_termino, :status, :prioridade)\n    end\nend\n","undoManager":{"mark":-2,"position":1,"stack":[[{"start":{"row":59,"column":38},"end":{"row":60,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":60,"column":0},"end":{"row":60,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":56,"column":20},"end":{"row":57,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":57,"column":0},"end":{"row":57,"column":4},"action":"insert","lines":["    "]}]]},"ace":{"folds":[],"scrolltop":900,"scrollleft":0,"selection":{"start":{"row":63,"column":5},"end":{"row":63,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":51,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1519250887716}